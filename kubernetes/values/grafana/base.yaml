grafana.ini:
  paths:
    data: /var/lib/grafana
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
  analytics:
    check_for_updates: false

service:
  type: ClusterIP

ingress:
  enabled: true
  ingressClassName: nginx
  hosts:
    - grafana.local
  paths:
    - path: /
      pathType: Prefix
  tls: []

persistence:
  enabled: true
  storageClassName: "local-path"
  accessModes: ["ReadWriteOnce"]
  size: 10Gi

# Security context for non-root operation
securityContext:
  runAsNonRoot: true
  runAsUser: 472
  runAsGroup: 472
  fsGroup: 472
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

initChownData:
  enabled: false # disabled due to chown permission denied on existing PVC; fsGroup handles access
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
    allowPrivilegeEscalation: false
    capabilities:
      add: ["CHOWN", "FOWNER"]
      drop: ["ALL"]
    seccompProfile:
      type: RuntimeDefault

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

sidecar:
  dashboards:
    enabled: true
    searchNamespace: monitoring
    # Look for ConfigMaps with this label
    label: grafana_dashboard
    labelValue: "1"
    provider:
      foldersFromFilesStructure: true
  datasources:
    enabled: true
    searchNamespace: monitoring

# Configure Prometheus as a data source
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
        access: proxy
        isDefault: true
      - name: Loki
        type: loki
        url: http://loki.monitoring.svc.cluster.local:3100
        access: proxy
